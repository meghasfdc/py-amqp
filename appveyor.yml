environment:
  erlang_download_url: "http://erlang.org/download/otp_win64_19.3.exe"
  erlang_exe_path: "C:\\Users\\appveyor\\erlang_19.3.exe"
  erlang_home_dir: "C:\\Users\\appveyor\\erlang"
  erlang_erts_version: "erts-8.3"

  rabbitmq_version: 3.7.4
  rabbitmq_installer_download_url: "https://github.com/rabbitmq/rabbitmq-server/releases/download/v3.7.4/rabbitmq-server-3.7.4.exe"
  rabbitmq_installer_path: "C:\\Users\\appveyor\\rabbitmq-server-3.7.4.exe"

  matrix:
    - TOXENV: "2.7"
      TOX_APPVEYOR_X64: 0

    - TOXENV: "3.4"
      TOX_APPVEYOR_X64: 0

    - TOXENV: "3.5"
      TOX_APPVEYOR_X64: 0

    - TOXENV: "3.6"
      TOX_APPVEYOR_X64: 0

    - TOXENV: "3.7"
      TOX_APPVEYOR_X64: 0

    - TOXENV: "2.7"
      TOX_APPVEYOR_X64: 1

    - TOXENV: "3.4"
      TOX_APPVEYOR_X64: 1

    - TOXENV: "3.5"
      TOX_APPVEYOR_X64: 1

    - TOXENV: "3.6"
      TOX_APPVEYOR_X64: 1

    - TOXENV: "3.7"
      TOX_APPVEYOR_X64: 1

build: off

configuration:
    - unit
    - windows-integration-rabbitmq

install:
  - "py -3.7 -m pip install -U pip setuptools wheel tox tox-appveyor"
  - ps: if ($env:CONFIGURATION -eq "windows-integration-rabbitmq") {powershell extra\\appveyor\\install_rmq.ps1}

test_script:
  - ps: $env:TOXENV="$env:TOXENV-$env:CONFIGURATION"
  - "py -3.7 -m tox"
  # - "%WITH_COMPILER% %PYTHON%/python setup.py test -E rabbitmq"

cache:
- "%erlang_exe_path%"
- "%rabbitmq_installer_path%"
- '%LOCALAPPDATA%\pip\Cache'
